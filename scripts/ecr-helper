#!/bin/bash

set -Eeo pipefail

aws_region=eu-west-2
repo_url_param="/registrations/dev/data-pipeline/ecr/url/transfer-classifier"
role_arn_param="/registrations/dev/user-input/cross-account-admin-role"

function assume_role() {
  role_arn=$(
    aws ssm get-parameters \
        --region ${aws_region} \
        --names ${role_arn_param} \
        --query 'Parameters[0].Value' \
        --output text
  )

  timestamp=$(date +%s)
  session_name="ci-ecr-helper-${timestamp}"
  sts=$(
    aws sts assume-role \
      --role-arn $role_arn \
      --role-session-name $session_name \
      --output json
  )

  unset AWS_ACCESS_KEY_ID
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_SESSION_TOKEN
  unset AWS_SECURITY_TOKEN

  export AWS_ACCESS_KEY_ID=$(echo $sts | jq -r .Credentials.AccessKeyId)
  export AWS_SECRET_ACCESS_KEY=$(echo $sts | jq -r .Credentials.SecretAccessKey)
  export AWS_SESSION_TOKEN=$(echo $sts | jq -r .Credentials.SessionToken)
}


function get_repo_uri() {
  assume_role
  aws ssm get-parameters \
      --region ${aws_region} \
      --names ${repo_url_param} \
      --query 'Parameters[0].Value' \
      --output text
}

function get_login() {
  assume_role
  aws ecr get-login --no-include-email --region ${aws_region}
}

command=$1

case "${command}" in
  get-login)
    get_login
    ;;
  get-repo-uri)
    get_repo_uri
    ;;
  *)
    echo "Invalid command: '${command}'"
    echo "Usage:"
    echo "ecr-helper [get-login|get-repo-uri]"
    exit 1
  ;;
esac
